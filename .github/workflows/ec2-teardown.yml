name: ec2-teardown
on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose terraform action'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - destroy
      ec2_type:
        description: 'Choose EC2 instance type'
        required: true
        default: 't2.micro'
        type: string
      

env:
  EC2_NAME: SpaceEngineersServer
  EC2_TYPE: ${{ github.event.inputs.ec2_type }}
  EC2_KEY_NAME: se_server_ec2_key
  ENI_NAME: SpaceEngineersENI
  ROOT_VOLUME_TYPE: gp2
  ROOT_VOLUME_SIZE: 30
  AWS_REGION: eu-central-1
  SUBNET_ID: ${{ secrets.SUBNET_ID }}
  TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
  
  
jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.2
          terraform_wrapper: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform/ec2-setup

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform/ec2-setup

      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'plan' }}
        run: terraform plan -var="ec2_name=${{ env.EC2_NAME }}" -var="region=${{ env.AWS_REGION }}" -var="eni_name=${{ env.ENI_NAME }}" -var="root_volume_type=${{ env.ROOT_VOLUME_TYPE }}" -var="root_volume_size=${{ env.ROOT_VOLUME_SIZE }}" -var="key_name=${{ env.EC2_KEY_NAME }}" -var="subnet_id=${{ secrets.SUBNET_ID }}" -var="instance_type=${{ env.EC2_TYPE }}"
        working-directory: ./terraform/ec2-setup

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        id: terraform
        run: terraform destroy -auto-approve -var="ec2_name=${{ env.EC2_NAME }}" -var="region=${{ env.AWS_REGION }}" -var="eni_name=${{ env.ENI_NAME }}" -var="root_volume_type=${{ env.ROOT_VOLUME_TYPE }}" -var="root_volume_size=${{ env.ROOT_VOLUME_SIZE }}" -var="key_name=${{ env.EC2_KEY_NAME }}" -var="subnet_id=${{ secrets.SUBNET_ID }}" -var="instance_type=${{ env.EC2_TYPE }}"
        working-directory: ./terraform/ec2-setup
