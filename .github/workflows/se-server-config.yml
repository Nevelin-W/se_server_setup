name: se-server-config

on:
  workflow_dispatch:
    inputs:
      ANSIBLE_IMAGE_VERSION:
        description: 'Enter a ansible image version'
        required: true
        default: '1.0.0_15-14-15-12-2024'
        type: choice
        options:
          - 1.0.0_15-14-15-12-2024
          - latest
      DRY_RUN:
        description: 'Enable Ansible dry-run mode'
        required: true
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

env:
  ANSIBLE_IMAGE_VERSION: ${{ github.event.inputs.ANSIBLE_IMAGE_VERSION }}
  DRY_RUN: ${{ github.event.inputs.DRY_RUN }}
  EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
  STEAM_USERNAME: ${{ secrets.STEAM_USERNAME }}
  STEAM_PASSWORD: ${{ secrets.STEAM_PASSWORD }}  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Cache Docker Image
      uses: actions/cache@v3
      with:
        path: ~/.cache/docker
        key: ${{ runner.os }}-docker-${{ secrets.DOCKER_USERNAME }}/ansible-container-${{ env.ANSIBLE_IMAGE_VERSION }}
        restore-keys: |
          ${{ runner.os }}-docker-${{ secrets.DOCKER_USERNAME }}/ansible-container-${{ env.ANSIBLE_IMAGE_VERSION }}
        enableCrossOsArchive: false
        fail-on-cache-miss: false
        lookup-only: false
    
    - name: Pull Ansible Docker Image
      run: docker pull ${{ secrets.DOCKER_USERNAME }}/ansible-container:${{ env.ANSIBLE_IMAGE_VERSION }}

    - name: Setup SSH Key
      run: |
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > $GITHUB_WORKSPACE/ansible/se_server_ec2_key.pem
        chmod 400 $GITHUB_WORKSPACE/ansible/se_server_ec2_key.pem

    - name: Update Inventory File with EC2_PUBLIC_IP
      run: |
        echo "${{ env.EC2_PUBLIC_IP }}" >> $GITHUB_WORKSPACE/ansible/inventory/se_server

    - name: Run Docker Container and Execute Ansible Playbook
      run: |
        # Run the Docker container
        docker run -d -it --name ansible-container \
          -v $GITHUB_WORKSPACE/ansible:/workspace/ansible \
          ${{ secrets.DOCKER_USERNAME }}/ansible-container:${{ env.ANSIBLE_IMAGE_VERSION }}

        # Set the dry-run flag for the playbook
        DRY_RUN_FLAG=""
        if [[ "${{ env.DRY_RUN }}" == "true" ]]; then
          DRY_RUN_FLAG="--check"
        fi

        # Execute Ansible playbook inside the container after cd'ing to /workspace/ansible
        docker exec ansible-container bash -c "cd /workspace/ansible && ansible-playbook se-server-config.yml -i inventory/se_server -e 'steam_username=${{ env.STEAM_USERNAME }} steam_password=${{ env.STEAM_PASSWORD }}' $DRY_RUN_FLAG"

       
          
